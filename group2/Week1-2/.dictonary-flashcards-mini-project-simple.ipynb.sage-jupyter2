{"backend_state":"running","connection_file":"/projects/0ddeade5-3577-4fe8-8cd6-8a0cb653428e/.local/share/jupyter/runtime/kernel-214436b7-d2af-40ef-b777-fa14da31e9fc.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"name":"python"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","end":1656438409867,"exec_count":2,"id":"973ba3","input":"dict = {'key0':'value0', 'key1':'value1', 'key2':'value2'}","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"pos":14,"start":1656438409861,"state":"done","type":"cell"}
{"cell_type":"code","end":1656438410854,"exec_count":3,"id":"910053","input":"flashcards = {\n    'cat':'a small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice',\n    'hat':'a shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.' ,\n    'flower':'the seed-bearing part of a plant, consisting of reproductive organs that are typically surrounded by a brightly colored corolla and a green calyx'}\nprint(flashcards['cat'])","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"a small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice\n"}},"pos":11,"start":1656438410843,"state":"done","type":"cell"}
{"cell_type":"code","end":1656438449389,"exec_count":5,"id":"109170","input":"dict = {'key0':'value0', 'key1':'value1', 'key2':'value2'}\nfor key, value in dict:\n    print(key,value)","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"ename":"ValueError","evalue":"too many values to unpack (expected 2)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [5]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28mdict\u001b[39m \u001b[38;5;241m=\u001b[39m {\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mkey0\u001b[39m\u001b[38;5;124m'\u001b[39m:\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvalue0\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mkey1\u001b[39m\u001b[38;5;124m'\u001b[39m:\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvalue1\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mkey2\u001b[39m\u001b[38;5;124m'\u001b[39m:\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvalue2\u001b[39m\u001b[38;5;124m'\u001b[39m}\n\u001b[0;32m----> 2\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m key, value \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mdict\u001b[39m:\n\u001b[1;32m      3\u001b[0m     \u001b[38;5;28mprint\u001b[39m(key,value)\n","\u001b[0;31mValueError\u001b[0m: too many values to unpack (expected 2)"]}},"pos":16,"start":1656438449372,"state":"done","type":"cell"}
{"cell_type":"code","end":1656439545458,"exec_count":10,"id":"f3e345","input":"flashcards = {\n    'cat':'a small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice',\n    'hat':'a shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.' ,\n    'flower':'the seed-bearing part of a plant, consisting of reproductive organs that are typically surrounded by a brightly colored corolla and a green calyx'}\n\nprint(\"This is a word guessing game\")\n\nprint(flashcards['cat'])\nguess1 = input('what is this word?')\nif guess1 == 'cat':\n    print(\"Good Job!\")\nelse:\n    print(\"Incorrect, the answer was cat.\")\n\nprint(\"Here is your next word:\")\nprint(flashcards['hat'])\nguess2 = input('Guess what word this is?')\nif guess2 == 'hat':\n    print(\"Yay good job it's correct\")\nelse:\n    print(\"Your answer was wrong, The correct answer is hat.\")\n\nprint(\"Here is your next word:\")\nprint(flashcards['flower'])\nguess3 = input('Guess what word this is?')\nif guess3 == 'flower':\n    print(\"Yay good job it's correct\")\nelse:\n    print(\"Your answer was wrong, The correct answer is flower.\")\n\nprint(\"Thanks for playing!\")","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"This is a word guessing game\na small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice\n"},"1":{"name":"input","opts":{"password":false,"prompt":"what is this word?"},"value":"cat"},"2":{"name":"stdout","text":"Incorrect, the answer was cat.\na shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.\nHere is your next word:\n"},"3":{"name":"input","opts":{"password":false,"prompt":"Guess what word this is?"},"value":"hat"},"4":{"name":"stdout","text":"Yay good job it's correct\nthe seed-bearing part of a plant, consisting of reproductive organs that are typically surrounded by a brightly colored corolla and a green calyx\nHere is your next word:\n"},"5":{"name":"input","opts":{"password":false,"prompt":"Guess what word this is?"}},"6":{"ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Input \u001b[0;32mIn [10]\u001b[0m, in \u001b[0;36m<cell line: 25>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[38;5;28mprint\u001b[39m(flashcards[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mflower\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[1;32m     24\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mHere is your next word:\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m---> 25\u001b[0m guess3 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43minput\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mGuess what word this is?\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     26\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m guess3 \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mflower\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m     27\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mYay good job it\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124ms correct\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m~/miniconda3/envs/nlp_env/lib/python3.8/site-packages/ipykernel/kernelbase.py:1075\u001b[0m, in \u001b[0;36mKernel.raw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1071\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_allow_stdin:\n\u001b[1;32m   1072\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m StdinNotImplementedError(\n\u001b[1;32m   1073\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraw_input was called, but this frontend does not support input requests.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1074\u001b[0m     )\n\u001b[0;32m-> 1075\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_input_request\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1076\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mstr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1077\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_parent_ident\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1078\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_parent\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1079\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpassword\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m   1080\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/nlp_env/lib/python3.8/site-packages/ipykernel/kernelbase.py:1120\u001b[0m, in \u001b[0;36mKernel._input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1117\u001b[0m             \u001b[38;5;28;01mbreak\u001b[39;00m\n\u001b[1;32m   1118\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m:\n\u001b[1;32m   1119\u001b[0m     \u001b[38;5;66;03m# re-raise KeyboardInterrupt, to truncate traceback\u001b[39;00m\n\u001b[0;32m-> 1120\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInterrupted by user\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;28mNone\u001b[39m\n\u001b[1;32m   1121\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m:\n\u001b[1;32m   1122\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlog\u001b[38;5;241m.\u001b[39mwarning(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInvalid Message:\u001b[39m\u001b[38;5;124m\"\u001b[39m, exc_info\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}},"pos":22,"start":1656439380395,"state":"done","type":"cell"}
{"cell_type":"code","end":1656439779765,"exec_count":12,"id":"8e2b52","input":"flashcards = {\n    'cat':'a small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice',\n    'hat':'a shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.' ,\n    'flower':'the seed-bearing part of a plant, consisting of reproductive organs that are typically surrounded by a brightly colored corolla and a green calyx'}\n\nprint(\"This is a word guessing game\")\n\nprint(flashcards['cat'])\nguess1 = input('what is this word?')\nif guess1 == 'cat':\n    print(\"Good Job!\")\nelse:\n    print(\"Incorrect, the answer was cat.\")\n\nprint(\"Here is your next word:\")\nprint(flashcards['hat'])\n\nguess2 = input('Guess what word this is?')\nif guess2 == 'hat':\n    print(\"Yay good job it's correct\")\nelse:\n    print(\"Your answer was wrong, The correct answer is hat.\")\n\nprint(\"Here is your next word:\")\nprint(flashcards['flower'])\nguess3 = input('Guess what word this is?')\nif guess3 == 'flower':\n    print(\"Yay good job it's correct\")\nelse:\n    print(\"Your answer was wrong, The correct answer is flower.\")\n\nprint(\"Thanks for playing!\")","kernel":"nlp_env","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","text":"This is a word guessing game\na small domesticated carnivorous mammal with soft fur, a short snout, and retractable claws. It is widely kept as a pet or for catching mice\n"},"1":{"name":"input","opts":{"password":false,"prompt":"what is this word?"},"value":"cat"},"2":{"name":"stdout","text":"Good Job!\nHere is your next word:\na shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.\n"},"3":{"name":"input","opts":{"password":false,"prompt":"Guess what word this is?"},"value":"hat"},"4":{"name":"stdout","text":"Yay good job it's correct\nHere is your next word:\nthe seed-bearing part of a plant, consisting of reproductive organs that are typically surrounded by a brightly colored corolla and a green calyx\n"},"5":{"name":"input","opts":{"password":false,"prompt":"Guess what word this is?"},"value":"flowwwe"},"6":{"name":"stdout","text":"Your answer was wrong, The correct answer is flower.\nThanks for playing!\n"}},"pos":44,"start":1656439743038,"state":"done","type":"cell"}
{"cell_type":"code","id":"179b54","input":"del dict['key2']\nprint(dict)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":9,"state":"done","type":"cell"}
{"cell_type":"code","id":"1c0ac0","input":"print('counter value:', counter)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":42,"state":"done","type":"cell"}
{"cell_type":"code","id":"2dd583","input":"param('AI','CAMP')","metadata":{"vscode":{"languageId":"plaintext"}},"pos":34,"state":"done","type":"cell"}
{"cell_type":"code","id":"524039","input":"def ret():\n    return 'Bananas'","metadata":{"vscode":{"languageId":"plaintext"}},"pos":36,"state":"done","type":"cell"}
{"cell_type":"code","id":"5fb845","input":"dict['key2'] = 'value2'\nprint(dict)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":7,"state":"done","type":"cell"}
{"cell_type":"code","id":"71627b","input":"guess = 'English is a good language'\nanswer = 'Python is the best language!'\nif guess == answer:\n    print('goood job! you got it right!')\nelse:\n    print('To bad. The answer was:', answer) # note: when the print function is given 2 inputs, it prints both seperated by a space","metadata":{"vscode":{"languageId":"plaintext"}},"pos":26,"state":"done","type":"cell"}
{"cell_type":"code","id":"72de48","input":"print(dict['key1'])","metadata":{"vscode":{"languageId":"plaintext"}},"pos":5,"state":"done","type":"cell"}
{"cell_type":"code","id":"84637f","input":"counter = 0\ndef inc():\n    counter += 1\ninc()\ncounter","metadata":{"vscode":{"languageId":"plaintext"}},"pos":40,"state":"done","type":"cell"}
{"cell_type":"code","id":"b1706a","input":"print('PythOn'.lower())\nprint('python'.lower())\nprint('PythOn'.lower()=='python'.lower())","metadata":{"vscode":{"languageId":"plaintext"}},"pos":28,"state":"done","type":"cell"}
{"cell_type":"code","id":"b76146","input":"def param(arg0, arg1):\n    print(arg0, arg1)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":32,"state":"done","type":"cell"}
{"cell_type":"code","id":"c95d38","input":"val = ret()\nprint(val)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":38,"state":"done","type":"cell"}
{"cell_type":"code","id":"d9e73d","input":"def func():\n    pass # pass just means there's nothing here - stops the code from breaking","metadata":{"vscode":{"languageId":"plaintext"}},"pos":30,"state":"done","type":"cell"}
{"cell_type":"code","id":"dbe050","input":"dict = {'key0':'value0', 'key1':'value1'}","metadata":{"vscode":{"languageId":"plaintext"}},"pos":3,"state":"done","type":"cell"}
{"cell_type":"code","id":"f1cac0","input":"guess = input()","metadata":{"vscode":{"languageId":"plaintext"}},"pos":18,"state":"done","type":"cell"}
{"cell_type":"code","id":"f97a63","input":"guess = input('enter your guess')\n# or\nprompt = 'enter your guess'\nguess = input(prompt)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"01d648","input":"Notice the curly braces, which denote a dictionary, and the colon, which pairs the key and the value. The values paired together can be anything.\n\nThis pairing allows us to access the value like this (and we can print with the print() statement):\n\n","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1204ae","input":"To make this easier, we can package this all into a function, which we can define as follows:","pos":29,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2eed9b","input":"Additionally, a function can hand back a value using a return statement","pos":35,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3974de","input":"For this section, we will be creating the game loop. To do that, we need a dictionary. A sample of that is supplied here (make sure to run the next cell, but you don't need to do anything with it)","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"41bcb1","input":"When we have this dictionary, we can run through it with a for loop like this:","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"50f9a6","input":"And finally, we can remove an entry like this:","pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"541d53","input":"A function can also take in parameters (the number isn't limited):","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"55308d","input":"This value can then be accessed as follows: (If you use parameters, the value can change based on the situation)","pos":37,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"622a7e","input":"Aditionally, we can add an entry like this:","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"64ae9d","input":"when your piece works, add the code check(v1,v2) to the end of your loop (where v1 is the name of your guess variable, and v2 is the name of the answer)\n\n","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"671464","input":"Now you can put it together to make the loop:","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"68c570","input":"Then print it like this","pos":41,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"74ec61","input":"But how will the student know what to write? To adress this, the input function allows us to give a prompt","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8221bb","input":"<h1>Flash Card Mini Project</h1>\nThis is a project covering a range of python topics, from storage to functions. This lets you define flashcards, then test your knowledge against them.\n\nThis project is broken into 3 parts. The first covers creating and storing the flashcards, the second covers creating the loop, and the third covers validating the input","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"82b154","input":"If you have a variable, you can also increment it in a function, like this","pos":39,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a87715","input":"But what if our user enters 'Python' and we wanted 'python' or the other way around? to do this, we make the cases match:\n\n","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"afd05c","input":"<h3>The Flashcards</h3>","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b2a3f6","input":"<h1>Running the loop</h1>\n\n","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c1e533","input":"Now make a dictionary of the flashcards (name it flashcards so other code syncs together) (the definition should be the key)","pos":10,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c68421","input":"In python, we can create a dictionary like this:\n\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e08154","input":"<h1>Validating guesses</h1>\n\n","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e3427d","input":"Now put this all together: (if you want to use return, you can work to integrate it with your team)","pos":43,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e5117a","input":"We can compare our guess with the answer using an if else block\n\n","pos":25,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e5fd5a","input":"This loops through each pair in the dictionary, saving the key to the variable key, and the value to the variable value\n\nNow that we have the keys, we can collect the user's guess using the input function and assign the result to a variable","pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f84999","input":"Then we can call it like this:","pos":33,"state":"done","type":"cell"}
{"id":"1b706b","input":"","pos":45,"type":"cell"}
{"id":"8ee5fc","input":"","pos":46,"type":"cell"}
{"id":0,"time":1656438666119,"type":"user"}
{"last_load":1656437673300,"type":"file"}